# Introduction to Apache OODT 

(~6 pages)

## What is Apache OODT and how can it help?

Apache Object Oriented Data Technology is an open source data processing toolkit. It supports data cataloguing and archiving along with data processing pipelines and workflows. Apache OODT doesn't dictate how you process your data, it's Object Oriented approach allows you to plug it in where you require to help you catalogue your data flows and streams and process large amounts of data in a distributed manner.

### History of OODT

Apache OODT was initially funded by the NASA Office of Space Science in 1998. It was envisioned as a national software framework for sharing data across heterogenous, distributed data repositories, along with science data generation, data capture, and distributed access to data for the science community. Due to the distributed nature of both NASA's data processing and storage facilities and also their data scientists, providing a distributed data science platform built on a common core was a priority to prevent duplication of both code and data around the globe. 

NASA used OODT as a data processing toolkit to support the capturing, processing and sharing of data in NASA's science archives. Today it is used for a number of land-based and space-based purposes. These include:

* National Cancer Institute's (NCI's) Early Detection Research Network (EDRN) which involves over 40 institutions all performing research into discovering cancer biomarkers which are early indicators of the disease.
* NASA's Planetary Data System, a repository and registry of all planetary data collected over the last 30 years.
* A number of earth science and data processing missions including Seawinds/QuickSCAT, Orbiting Carbon Observatory, NPP Sounder PEATE project and the Soil Moisture Active Passive (SMAP) mission.

In 2007 NASA made the committment to open source a number of their pieces of software and so after a meeting with the president of the Apache Software Foundation(ASF), the wheels were set in motion for NASA to hand over Apache OODT. Two years after this initial meeting, OODT was accepted into the ASF incubator where new projects are managed to make sure they adhere to ASF standards. Then in November 2010, Apache OODT was accepted by the ASF as a top level project and with that the ASF took over the stewardship of the platform which is still heavily used within NASA today. With NASA open sourcing OODT and the transition to the Apache Foundation, it allowed a number of other organisations to make use of the product and so the community surrounding the Apache OODT platform has continued to grow.

Because OODT has a permissive license, companies can use the product both for private and commercial purposes which aids adoption. The platform also makes use of a number of other Apache licensed projects including Apache Tika, Apache Lucene and Apache Solr.

## What is metadata and why do I need it?

Metadata, although we may not know it, surrounds our ever day lives. From the data stored within a digital photograph, to the authoring information in a word document, to the supplier and packaging details retailers might store about your favourite brand of shampoo, metadata is everywhere. Data processing and storage has often focused (quite rightly) on the data content and not the associated metadata, but as we process more and more data from weblogs to entire sharepoint drives, why discard what can be very useful information?

Take web logs as an example. Large companies store gigabytes, maybe terabytes of logs on a daily basis. They are plain text files that can list every interaction a webserver has made and help companies analyze their  webtraffic in the most granular detail. But what metadata can you store with a log? Capture date, server information, website(s) served. Thats a very simple example but you already have this extra metadata that can make post processing and historical archiving much more effective. Instead of writing a script that searches through 100's of log files to find the one that is required, users could simply search for a specific product type and capture date and have the information instantly returned to them. Or that information could kick off a workflow that will process the log and transform it into something more appropriate for an end user.

Another example might be sensor data. Sensor data by itself can sometimes be of little use, but blend it with external data it can suddenly come to life. If you are capturing electricity meter readings from a smart meter, the numbers coming back into your warehouse could be pretty meaningless, but add in the price per unit for electricity and suddenly you can add meaning to that data, because along with the volume you now have a price to track over time as well.

## A look at the OODT architecture
s
## Summary
